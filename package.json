{
  "name": "typing-game",
  "version": "0.1.0",
  "type": "module",
  "scripts": {
    "prepare": "husky install",
    "test": "cd packages/typing-core && npm run test",
    "format": "npx prettier --write .",
    "format:check": "npx prettier --check .",
    "lint": "eslint .",
    "lint:check": "eslint --max-warnings 0 .",
    "lint:fix": "eslint --fix .",
    "build:api-serializers": "cd packages/api-serializers && npm run build",
    "build:api-types": "cd packages/api-types && npm run build",
    "build:typing-question-sets": "cd packages/typing-question-sets && npm run build",
    "build:typing-core": "cd packages/typing-core && npm run build",
    "build:packages": "npm run build:typing-core && npm run build:typing-question-sets && npm run build:api-serializers && npm run build:api-types",
    "build:frontend": "cd frontend && npm run build",
    "build:backend": "cd backend && npm run build",
    "build": "npm run build:packages && npm run build:frontend && npm run build:backend",
    "type-check:api-serializers": "cd packages/api-serializers && npm run type-check",
    "type-check:api-types": "cd packages/api-types && npm run type-check",
    "type-check:typing-question-sets": "cd packages/typing-question-sets && npm run type-check",
    "type-check:typing-core": "cd packages/typing-core && npm run type-check",
    "type-check:packages": "npm run type-check:typing-core && npm run type-check:typing-question-sets && npm run type-check:api-serializers && npm run type-check:api-types",
    "type-check:frontend": "cd frontend && npm run type-check",
    "type-check:backend": "cd backend && npm run type-check",
    "type-check": "npm run build:packages && npm run type-check:packages && npm run type-check:frontend && npm run type-check:backend",
    "setup": "npm run setup:ci && npm run setup:env && npm run build:packages && docker compose build",
    "setup:ci": "npm ci && npm run ci:packages && npm run ci:frontend && npm run ci:backend",
    "ci:api-serializers": "cd packages/api-serializers && npm ci",
    "ci:api-types": "cd packages/api-types && npm ci",
    "ci:typing-question-sets": "cd packages/typing-question-sets && npm ci",
    "ci:typing-core": "cd packages/typing-core && npm ci",
    "ci:packages": "npm run ci:api-serializers && npm run ci:api-types && npm run ci:typing-question-sets && npm run ci:typing-core",
    "ci:frontend": "cd frontend && npm ci",
    "ci:backend": "cd backend && npm ci",
    "setup:env": "npm run env:frontend && npm run env:backend",
    "env:frontend": "cd frontend && if [ ! -f \".env\" ]; then cp \".env.sample\" \".env\"; fi",
    "env:backend": "cd backend && if [ ! -f \".env\" ]; then cp \".env.sample\" \".env\"; fi",
    "dev:api-serializers": "cd packages/api-serializers && npm run dev",
    "dev:api-types": "cd packages/api-types && npm run dev",
    "dev:typing-question-sets": "cd packages/typing-question-sets && npm run dev",
    "dev:typing-core": "cd packages/typing-core && npm run dev",
    "dev:packages": "npm-run-all --parallel dev:api-serializers dev:api-types dev:typing-question-sets dev:typing-core",
    "watch:frontend": "cd frontend && npm run dev -- --host",
    "dev:frontend": "npm-run-all --parallel dev:packages watch:frontend",
    "watch:backend": "cd backend && npm run dev",
    "dev:backend": "npm-run-all --parallel dev:packages watch:backend",
    "dev:database": "docker compose up database",
    "dev": "npm-run-all --parallel dev:backend dev:frontend dev:database"
  },
  "license": "MIT",
  "lint-staged": {
    "**/*": "prettier --write --ignore-unknown"
  },
  "devDependencies": {
    "@typescript-eslint/eslint-plugin": "^6.7.3",
    "@typescript-eslint/parser": "^6.7.3",
    "eslint": "^8.50.0",
    "eslint-config-prettier": "^9.0.0",
    "eslint-config-standard-with-typescript": "^39.1.0",
    "eslint-plugin-react-hooks": "^4.6.0",
    "eslint-plugin-react-refresh": "^0.4.3",
    "husky": "^8.0.3",
    "lint-staged": "^14.0.1",
    "npm-run-all": "^4.1.5",
    "prettier": "^3.0.3"
  },
  "dependencies": {
    "hiragana-parser": "^1.2.2"
  }
}
